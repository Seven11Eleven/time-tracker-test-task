// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "openapi": "3.0.3",
    "info": {
        "title": "Time Tracker API",
        "version": "1.0.0"
    },
    "paths": {
        "/api/users": {
            "get": {
                "summary": "Получить всех пользователей",
                "description": "Возвращает список всех пользователей с возможностью фильтрации, пагинации и сортировки",
                "tags": [
                    "users"
                ],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Количество записей для возврата"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 0
                        },
                        "description": "Смещение записей для возврата"
                    },
                    {
                        "name": "passport_number",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Номер паспорта"
                    },
                    {
                        "name": "surname",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Фамилия"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Имя"
                    },
                    {
                        "name": "patronymic",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Отчество"
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Адрес"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешно",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid limit value"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Добавить нового пользователя",
                "description": "Добавляет нового пользователя в систему",
                "tags": [
                    "users"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Пользователь добавлен",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string",
                                            "example": "Пользователь добавлен!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Неверный запрос"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{userID}/tasks": {
            "get": {
                "summary": "Get user tasks by period",
                "description": "Get tasks for a user within a specified time period",
                "tags": [
                    "tasks"
                ],
                "parameters": [
                    {
                        "name": "userID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Task"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tasks/start": {
            "post": {
                "summary": "Start a new task",
                "description": "Start tracking time for a new task",
                "tags": [
                    "tasks"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Request"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tasks/end/{taskID}": {
            "post": {
                "summary": "End a task",
                "description": "End tracking time for a task",
                "tags": [
                    "tasks"
                ],
                "parameters": [
                    {
                        "name": "taskID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{userID}": {
            "put": {
                "summary": "Update user",
                "description": "Update user information",
                "tags": [
                    "users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string",
                                            "example": "User updated successfully!"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/delete/{userID}": {
            "delete": {
                "summary": "Delete user",
                "description": "Delete a user from the system",
                "tags": [
                    "users"
                ],
                "parameters": [
                    {
                        "name": "userID",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "passport_number": {
                        "type": "string",
                        "example": "123456"
                    },
                    "surname": {
                        "type": "string",
                        "example": "Иванов"
                    },
                    "name": {
                        "type": "string",
                        "example": "Иван"
                    },
                    "patronymic": {
                        "type": "string",
                        "example": "Иванович"
                    },
                    "address": {
                        "type": "string",
                        "example": "Москва, ул. Пушкина, д. 10"
                    }
                }
            },
            "Task": {
                "type": "object",
                "properties": {
                    "task_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "start_time": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T12:00:00Z"
                    },
                    "end_time": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T13:00:00Z"
                    },
                    "duration": {
                        "type": "integer",
                        "example": 3600
                    }
                }
            },
            "Request": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Time Tracker API",
	Description:      "This is a sample API for Time Tracker application using Gin",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
